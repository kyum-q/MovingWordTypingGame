import java.awt.Color;
import java.awt.Container;
import java.awt.Font;

import javax.swing.JLabel;
import javax.swing.JPanel;

public class ScorePanel extends JPanel {
	private Thread gameTh = null;
	private Font font = new Font("타이포_쌍문동 B", Font.BOLD, 15);
	private int score = 0;
	private JLabel textLabel = new JLabel("점수");
	private JLabel scoreLabel = new JLabel(Integer.toString(score));
	
	private int lifeCount = 3;
	private int MaxLife = 5;
	private JLabel life [] = new JLabel[MaxLife];
	private int lifeX = 10, lifeY = 40;
	
	private JLabel bombText = new JLabel("소지 폭탄 : ");
	private JLabel bomb [] = new JLabel[5];
	private int bombCount = 0;
	private int bombX = 10, bombY = 100;
	
	private JLabel speedText = new JLabel(" ");
	
	public ScorePanel() {
		setBackground(Color.LIGHT_GRAY);
		setLayout(null); // Layout 제거
		
		textLabel.setSize(50,20);
		textLabel.setLocation(10,10);
		textLabel.setFont(font); // font 설정
		add(textLabel);
		
		scoreLabel.setSize(100,20);
		scoreLabel.setLocation(70,10);
		scoreLabel.setFont(font); // font 설정
		add(scoreLabel);
		
		bombText.setSize(100,15);
		bombText.setLocation(10,70);
		bombText.setFont(font); // font 설정
		add(bombText);
		
		speedText.setSize(300,50);
		speedText.setFont(font); // font 설정
		speedText.setLocation(10,130);
		add(speedText);
		
		lifeInit();
		bombInit();
	}
	public void setGameThread(GameThread gameTh) {
		this.gameTh = gameTh;
	}
	public void scoreInit() { // score 초기화
		lifeCount = 3;
		bombCount = 0;
		score = 0;
		scoreLabel.setText(Integer.toString(score));
		
		lifePrint();
		bombPrint();
	}
	public void lifeInit() { // life 초기화
		int x = this.lifeX;
		// 5개를 그레이
		for(int i=0; i<MaxLife; i++) {
			life[i] = new JLabel("♥");
			life[i].setSize(10,10);
			life[i].setLocation(x,lifeY);
			life[i].setForeground(Color.GRAY);
			this.add(life[i]);
			x += 20;
		}
		// 현재 가지고 있는 life 갯수 만큼 빨간색
		for(int i=0; i<lifeCount; i++) 
			life[i].setForeground(Color.RED);
	}
	public void lifePrint() {
		// 5개를 그레이
		for(int i=0; i<MaxLife; i++) 
			life[i].setForeground(Color.GRAY);
		// 현재 가지고 있는 life 갯수 만큼 빨간색
		for(int i=0; i<lifeCount; i++) 
			life[i].setForeground(Color.RED);
	}
	public boolean checkLifeCount() { // life개수 확인
		if(lifeCount>=MaxLife)
			return true;
		else
			return false;
		}
	public void lifeiIncrease() {// life 증가
		life[lifeCount].setForeground(Color.RED);
		lifeCount++;
	}
	public void lifeDecrease() { // life 감소
		lifeCount--;
		life[lifeCount].setForeground(Color.GRAY);
		if(lifeCount == 0) { //life가 0일때 
			gameTh.interrupt(); // gameTh종료
		}	
	}
	public void bombInit() {
		int x = this.bombX;
		for(int i=0; i<5; i++) {
			bomb[i] = new JLabel(" ");
			bomb[i].setSize(20,20);
			bomb[i].setLocation(x,bombY);
			add(bomb[i]);
			x += 20;
		}
	}
	public void bombPrint() {
		for(int i=0; i<5; i++) 
			bomb[bombCount].setText("");
		// 가지고 있는 폭탄개수만큼 폭탄 그림 표시
		for(int i=0; i<bombCount; i++) 
			bomb[bombCount].setText("💣");
	}
	public void bombIncrease() {
		if(bombCount >= 5) // 폭탄 최대 5개
			return;
		bomb[bombCount].setText("💣");
		bombCount++;
	}
	public void bombDecrease() { // 폭탄 갯수 줄이기
		if(bombCount <= 0)
			return;
		bombCount--;
		bomb[bombCount].setText("");
	}
	public int getBombCount() { return bombCount; } // 폭탄 갯수 확인
	
	public int getScore() { return score; } // 점수 확인
	public void increase(int i) { // 점수 증가
		score += i;
		scoreLabel.setText(Integer.toString(score));
		if(score >= 100) { // 점수가 100점이면 게임 성공으로 종료
			((GameThread) gameTh).setEnd(1);
			gameTh.interrupt();
		}
	}
	public void changeSpeed(String speed) {	speedText.setText(speed); }
	// speed text 변경
}