import javax.swing.JButton;

public class GameThread extends Thread {
	private GamePanel gamePanel = null;
	private GameGroundPanel groundPanel = null;
	private Thread textTh[] = null;
	
	private int maxTextCount = 4; // 화면에 표시할 수 있는 최대 카운트
	private int textChange[] = new int [10];
	private int delay = 3000;
	private int runNumber = 0; 
	
	public GameThread(GamePanel gamePanel,GameGroundPanel groundPanel,Thread[] textTh) {
		this.gamePanel = gamePanel;
		this.groundPanel = groundPanel;
		this.textTh = textTh;
	}
	public void gameStop() {
		try {
			Thread.sleep(5000);
		} catch (InterruptedException e) {
			return;
		}
	}
	public void textMoveThreadEnd () {
		int i=0;
		for(i=0;i<maxTextCount;i++) { // 현재 실행 중인 textTh 중지
			if(gamePanel.getTextChange(i) != 0) { 
				textChange[i] = 0; 
				textTh[i].interrupt(); // 현재 존재하는 text 스레드 중지
			}
		}
	}
	@Override
	public void run() {
		if(runNumber == 0) {
			groundPanel.startTextSet();
			runNumber++;
		}
		while(true) {
			int i=0;
			for(i=0;i<maxTextCount;i++) {
				if(gamePanel.getTextChange(i) == 0) // text[] 중 사용하지 않는 text 찾기
					break;
			}
			if(i<maxTextCount)
				gamePanel.textMake(i); // text 만들기
			
			delay = (int)(Math.random()*9)+3; // 3~12초 사이 중 랜덤하게 선택
			delay *= 1000; //(1000ms = 1초)
			try {
				Thread.sleep(delay);
			} catch (InterruptedException e) {
				textMoveThreadEnd();
				JButton btn = new JButton("GAME OVER");
				btn.setSize(200,50);
				btn.setLocation(200,150);
				groundPanel.add(btn);
				return; // run()의 리턴은 스레드 종료
			} 
		}
	}
}
