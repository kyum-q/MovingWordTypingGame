import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JPanel;
import javax.swing.JSplitPane;
import javax.swing.JToolBar;

public class GameFrame extends JFrame {
	// 버튼을 위해 이미지 로딩하여 아이콘 만들기
	private JButton startBtn = new JButton("Play");
	private JButton stopBtn = new JButton("Stop");
	private JButton levelBtn = new JButton("Set");
	
	private Thread textTh [] = new Thread[10]; // text 움직이기 위해 만든 thread
	private GameThread gameThread = null;
	private GameSetFrame setFrame = null;
	
	private ScorePanel scorePanel = new ScorePanel(); //점수 Panel
	private TextSource textSource = new TextSource(); //단어 벡터 생성
	private EditPanel editPanel = new EditPanel(textSource); // 단어 추가 Panel
	private GameGroundPanel groundPanel = new GameGroundPanel(scorePanel, textTh,textSource); // 단어 내려오는 Panel
	private GamePanel gamePanel = new GamePanel(scorePanel,editPanel,groundPanel,textTh,this); // 게임 작동 Panel (panel 분배)
	
	
	public GameFrame() {
		setTitle("보석 찾기 게임");
		setSize(800,500);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		splitPane(); // JSplitPane을 생성하여 컨텐트팬의 CENTER에 부착
		makeToolBar();
		
		setResizable(false); // 창크기 고정 (수정 불가)
		setVisible(true);
	}
	
	private void splitPane() {
		JSplitPane hPane = new JSplitPane();
		getContentPane().add(hPane, BorderLayout.CENTER);
		
		hPane.setOrientation(JSplitPane.HORIZONTAL_SPLIT);
		hPane.setDividerLocation(600);
		hPane.setEnabled(false); // splitPane 위치 고정
		
		JSplitPane pPane = new JSplitPane();
		pPane.setOrientation(JSplitPane.VERTICAL_SPLIT);
		pPane.setDividerLocation(250);
		pPane.setEnabled(false); // splitPane 위치 고정
		
		pPane.setTopComponent(scorePanel);
		pPane.setBottomComponent(editPanel);
		
		hPane.setRightComponent(pPane);
		hPane.setLeftComponent(gamePanel);
		
	}
	
	private void makeToolBar() {
		JToolBar tBar = new JToolBar();
		tBar.add(startBtn);
		tBar.add(stopBtn);
		tBar.add(levelBtn);
		
		getContentPane().add(tBar,BorderLayout.NORTH); // 무조건 BorderLayout이어야한다
		
		startBtn.addActionListener(new StartAction()); // start 버튼을 누를시 게임 시작
		stopBtn.addActionListener(new StopAction()); // stop 버튼을 누를시 게임 종료
		levelBtn.addActionListener(new LevelSetAction());
	}
	
	public void startGameTh() {
		scorePanel.scoreInit();
		gameThread = new GameThread(gamePanel, groundPanel, textTh);
		gamePanel.setGameThread(gameThread); // gamePanel에 gameThread 등록
		scorePanel.setGameThread(gameThread); // scorePanel에 gameThread 등록
		gameThread.start(); // 스레드 시작
	}
	
	private class StartAction implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if(gamePanel.getGameStart()==0) 
				startGameTh();
		}
	}
	private class StopAction implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if(gamePanel.getGameStart()==1) 
				gameThread.interrupt(); // 게임 종료
		}
	}
	private class LevelSetAction implements ActionListener {
		public void actionPerformed(ActionEvent e) {
			if(gamePanel.getGameStart()==0)
				setFrame = new GameSetFrame(textSource, gamePanel);
		}
	}
}
